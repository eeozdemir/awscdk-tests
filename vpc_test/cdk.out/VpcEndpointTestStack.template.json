{
 "Parameters": {
  "keypair": {
   "Type": "String",
   "Description": "EC2 Key Pair Name"
  },
  "safeip": {
   "Type": "String",
   "Description": "IP Address with /32 suffix to Allow SSH Connections from"
  },
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "VPCEndpointsA938FBB8": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/20",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "VpcEndpointTestStack/VPC-Endpoints"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/Resource"
   }
  },
  "VPCEndpointspublicsubnetSubnet1Subnet76B2D832": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCEndpointsA938FBB8"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "VpcEndpointTestStack/VPC-Endpoints/public-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/public-subnetSubnet1/Subnet"
   }
  },
  "VPCEndpointspublicsubnetSubnet1RouteTable25DEBA1B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCEndpointsA938FBB8"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "VpcEndpointTestStack/VPC-Endpoints/public-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/public-subnetSubnet1/RouteTable"
   }
  },
  "VPCEndpointspublicsubnetSubnet1RouteTableAssociation4948FA61": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCEndpointspublicsubnetSubnet1RouteTable25DEBA1B"
    },
    "SubnetId": {
     "Ref": "VPCEndpointspublicsubnetSubnet1Subnet76B2D832"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/public-subnetSubnet1/RouteTableAssociation"
   }
  },
  "VPCEndpointspublicsubnetSubnet1DefaultRoute079E34D6": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCEndpointspublicsubnetSubnet1RouteTable25DEBA1B"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCEndpointsIGW7D2C5A0D"
    }
   },
   "DependsOn": [
    "VPCEndpointsVPCGWC6E87529"
   ],
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/public-subnetSubnet1/DefaultRoute"
   }
  },
  "VPCEndpointsprivatesubnetSubnet1Subnet01F4FD0A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCEndpointsA938FBB8"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "VpcEndpointTestStack/VPC-Endpoints/private-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/private-subnetSubnet1/Subnet"
   }
  },
  "VPCEndpointsprivatesubnetSubnet1RouteTableD5C38080": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCEndpointsA938FBB8"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "VpcEndpointTestStack/VPC-Endpoints/private-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/private-subnetSubnet1/RouteTable"
   }
  },
  "VPCEndpointsprivatesubnetSubnet1RouteTableAssociationA5DBA06C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCEndpointsprivatesubnetSubnet1RouteTableD5C38080"
    },
    "SubnetId": {
     "Ref": "VPCEndpointsprivatesubnetSubnet1Subnet01F4FD0A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/private-subnetSubnet1/RouteTableAssociation"
   }
  },
  "VPCEndpointsIGW7D2C5A0D": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "VpcEndpointTestStack/VPC-Endpoints"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/IGW"
   }
  },
  "VPCEndpointsVPCGWC6E87529": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "VPCEndpointsA938FBB8"
    },
    "InternetGatewayId": {
     "Ref": "VPCEndpointsIGW7D2C5A0D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/VPC-Endpoints/VPCGW"
   }
  },
  "sshsecuritygroup284539AD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Allow SSH (TCP port 22) from Anywhere and All TCP within VPC",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Ref": "safeip"
      },
      "Description": "Allow SSH from Specific IP",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "VPCEndpointsA938FBB8",
        "CidrBlock"
       ]
      },
      "Description": "Allow all TCP within VPC",
      "FromPort": 0,
      "IpProtocol": "tcp",
      "ToPort": 65535
     }
    ],
    "VpcId": {
     "Ref": "VPCEndpointsA938FBB8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/ssh-security-group/Resource"
   }
  },
  "vpcendpointsbkt6949EDA6": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/vpc-endpoints-bkt/Resource"
   }
  },
  "vpcendpointsstream01BCD141": {
   "Type": "AWS::Kinesis::Stream",
   "Properties": {
    "RetentionPeriodHours": 24,
    "ShardCount": 1,
    "StreamEncryption": {
     "Fn::If": [
      "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
      {
       "Ref": "AWS::NoValue"
      },
      {
       "EncryptionType": "KMS",
       "KeyId": "alias/aws/kinesis"
      }
     ]
    },
    "StreamModeDetails": {
     "StreamMode": "PROVISIONED"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/vpc-endpoints-stream/Resource"
   }
  },
  "ec2roleFD75669B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/ec2-role/Resource"
   }
  },
  "ec2roleDefaultPolicyCD46584B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject",
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "vpcendpointsbkt6949EDA6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "vpcendpointsbkt6949EDA6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "kinesis:*",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "vpcendpointsstream01BCD141",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ec2roleDefaultPolicyCD46584B",
    "Roles": [
     {
      "Ref": "ec2roleFD75669B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/ec2-role/DefaultPolicy/Resource"
   }
  },
  "pubec2vpcendptsInstanceProfile5AE675B8": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ec2roleFD75669B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/pub-ec2-vpc-endpts/InstanceProfile"
   }
  },
  "pubec2vpcendpts588343A8": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "pubec2vpcendptsInstanceProfile5AE675B8"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.micro",
    "KeyName": {
     "Ref": "keypair"
    },
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "sshsecuritygroup284539AD",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VPCEndpointspublicsubnetSubnet1Subnet76B2D832"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "VpcEndpointTestStack/pub-ec2-vpc-endpts"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash"
    }
   },
   "DependsOn": [
    "ec2roleDefaultPolicyCD46584B",
    "ec2roleFD75669B"
   ],
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/pub-ec2-vpc-endpts/Resource"
   }
  },
  "privec2vpcendptsInstanceProfile0C665ABE": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ec2roleFD75669B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/priv-ec2-vpc-endpts/InstanceProfile"
   }
  },
  "privec2vpcendpts2A9C08E1": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "privec2vpcendptsInstanceProfile0C665ABE"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.micro",
    "KeyName": {
     "Ref": "keypair"
    },
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "sshsecuritygroup284539AD",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VPCEndpointsprivatesubnetSubnet1Subnet01F4FD0A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "VpcEndpointTestStack/priv-ec2-vpc-endpts"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash"
    }
   },
   "DependsOn": [
    "ec2roleDefaultPolicyCD46584B",
    "ec2roleFD75669B"
   ],
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/priv-ec2-vpc-endpts/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VRwW7DIAz9lt0J2zJN2rXLoeqpKJl6nQhxNTcJRGBaVRH/PgLpop38eLbe8zMlL9/5y5O8uUJ1fTFgy+eGpOpZddZCWjkCgWWx/z2DKvl8mtTSOomKCd8OqBrfaqCF21BtPMGXbAfY+I3bOWcUSkKj/4aZsHiVBJvGQUfjiPeRvcn7arq+dhR3/BlBE2tAeYt031vjp2T3jzhoR1IryJIZB+be+PzpVZ+tMgqsRw0O3XIBC3JMYgkFhnLkc21yoFSFieHTWht6GAhrzjhACKwGZ7zN9pXRHT5SHz1NPh9rHQlMmw74xT1fXz94GX/l4hAL6zXhCLzO9RchLTSgsQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "VpcEndpointTestStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
   "Fn::Or": [
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "cn-north-1"
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "cn-northwest-1"
     ]
    }
   ]
  },
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Outputs": {
  "Ec2PublicIp": {
   "Value": {
    "Fn::GetAtt": [
     "pubec2vpcendpts588343A8",
     "PublicIp"
    ]
   }
  },
  "Ec2PrivateIp": {
   "Value": {
    "Fn::GetAtt": [
     "privec2vpcendpts2A9C08E1",
     "PrivateIp"
    ]
   }
  },
  "S3Bucket": {
   "Value": {
    "Ref": "vpcendpointsbkt6949EDA6"
   }
  },
  "KdsStream": {
   "Value": {
    "Ref": "vpcendpointsstream01BCD141"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}